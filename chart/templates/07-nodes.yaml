apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "node" . }}
  namespace: {{ template "namespace" . }}
  annotations:
    timestamp: {{ template "timestamp" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "node" . }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
    spec:
      containers:
        # Liveness probe
        - name: liveness-probe
          image: quay.io/k8scsi/livenessprobe:v1.1.0
          imagePullPolicy: Always
          args:
            - "--csi-address=/csi/csi.sock"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        # Node Registration
        - name: csi-driver-registrar
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.2.0
          args:
            - "-v=10"
            - "--csi-address=/csi/csi.sock"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/csi.xcpng.arturonet.com/csi.sock"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/csi.xcpng.arturonet.com /registration/csi.xcpng.arturonet.com-reg.sock"]
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          securityContext:
            privileged: true
        #Node
        - name: node
          image: {{ template "image" . }}
          imagePullPolicy: Always
          ports:
            - name: healthz
              protocol: TCP
              containerPort: 9808
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: /csi/csi.sock
            - name: CSI_MODE
              value: node
            # Fixes bug where goCSI was returning InvalidArgument on NodePublishVolume
            - name: X_CSI_SPEC_REQ_VALIDATION
              value: "false"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
            - name: device-dir
              mountPath: /dev
            - name: plugins-dir
              mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
            - name: config
              mountPath: /config
          securityContext:
            privileged: true
      volumes:
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
        - name: plugins-dir
          hostPath:
            path: /var/lib/kubelet/plugins
            type: DirectoryOrCreate
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.xcpng.arturonet.com
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        - name: config
          configMap:
            name: {{ template "name" . }}
            items:
              - key: xcpng-csi.conf
                path: xcpng-csi.conf